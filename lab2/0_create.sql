CREATE SCHEMA "GINZA";

CREATE USER DBADMIN2 PASSWORD "DBPASSWORDshchuko1" SET USERGROUP DEFAULT;
ALTER USER DBADMIN2 DISABLE PASSWORD LIFETIME;

CREATE ROLE CCROLE;
grant  SELECT, UPDATE, INSERT, DELETE, EXECUTE, SELECT METADATA ON SCHEMA "GINZA" TO CCROLE with grant option;
grant  CCROLE to DBADMIN2 with admin option;

-- CREATE TABLES
CREATE
ROW TABLE "GINZA"."User"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "name" VARCHAR(255) NOT NULL,
    "phone" VARCHAR(40) NOT NULL,
    "email" VARCHAR(255),
    "password_hash" VARCHAR(255) NOT NULL,
    "favourite_address" INT
);

CREATE
ROW TABLE "GINZA"."UserAddress"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "user_id" INT NOT NULL,
    "name" VARCHAR(255) NOT NULL UNIQUE,
    "zip_code" VARCHAR(30) NOT NULL,
    "country" VARCHAR(50) NOT NULL,
    "city" VARCHAR(50) NOT NULL,
    "street" VARCHAR(50) NOT NULL,
    "building" VARCHAR(30) NOT NULL,
    "room" VARCHAR(30) NOT NULL,
    "notes" VARCHAR(255) NOT NULL
);

CREATE
ROW TABLE "GINZA"."Order"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "user_id" INT NOT NULL,
    "address_id" INT NOT NULL,
    "restaurant_id" INT NOT NULL,
    "status_id" INT NOT NULL,
    "creation_date" TIMESTAMP,
    "total_price" DECIMAL(19,4),
    "notes" VARCHAR(255) NOT NULL
);

CREATE
ROW TABLE "GINZA"."OrderStatus"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "name" VARCHAR(255) UNIQUE
);

CREATE
ROW TABLE "GINZA"."KitchenType"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "name" VARCHAR(255) UNIQUE
);

CREATE
ROW TABLE "GINZA"."RestaurantKitchenType"
(
    "restaurant_id" INT NOT NULL,
    "kitchen_id" INT NOT NULL,
    PRIMARY KEY("restaurant_id", "kitchen_id")
);

CREATE
ROW TABLE "GINZA"."Restaurant"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "name" VARCHAR(255) NOT NULL,
    "phone" VARCHAR(40) NOT NULL,
    "country" VARCHAR(50) NOT NULL,
    "city" VARCHAR(50) NOT NULL,
    "street" VARCHAR(50) NOT NULL,
    "building" VARCHAR(30) NOT NULL,
    "description" VARCHAR(255) NOT NULL
);

CREATE
ROW TABLE "GINZA"."Menu"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "restaurant_id" INT NOT NULL,
    "name" VARCHAR(50),
    "description" VARCHAR(255)
);

CREATE
ROW TABLE "GINZA"."MenuMeal"
(
    "menu_id" INT NOT NULL,
    "meal_id" INT NOT NULL,
    PRIMARY KEY("menu_id", "meal_id"),
    "price" DECIMAL(19, 4)
);

CREATE
ROW TABLE "GINZA"."Meal"
(
    "id" INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY("id"),
    "name" VARCHAR(30),
    "description" VARCHAR(255)
);

CREATE
ROW TABLE "GINZA"."OrderEntry"
(
    "order_id" INT NOT NULL,
    "meal_id" INT NOT NULL,
    PRIMARY KEY("order_id", "meal_id"),
    "price" DECIMAL(19, 4)
);


-- CREATE FOREIGN KEYS

ALTER TABLE "GINZA"."User"
    ADD FOREIGN KEY ("favourite_address") REFERENCES "GINZA"."UserAddress" ("id") ON DELETE CASCADE;

ALTER TABLE "GINZA"."UserAddress"
    ADD FOREIGN KEY ("user_id") REFERENCES "GINZA"."User" ("id");

ALTER TABLE "GINZA"."Order"
    ADD FOREIGN KEY ("address_id") REFERENCES "GINZA"."UserAddress" ("id");

ALTER TABLE "GINZA"."Order"
    ADD FOREIGN KEY ("user_id") REFERENCES "GINZA"."User" ("id");

ALTER TABLE "GINZA"."Order"
    ADD FOREIGN KEY ("status_id") REFERENCES "GINZA"."OrderStatus" ("id");

ALTER TABLE "GINZA"."Order"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "GINZA"."Restaurant" ("id");

ALTER TABLE "GINZA"."RestaurantKitchenType"
    ADD FOREIGN KEY ("kitchen_id") REFERENCES "GINZA"."KitchenType" ("id");

ALTER TABLE "GINZA"."RestaurantKitchenType"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "GINZA"."Restaurant" ("id");

ALTER TABLE "GINZA"."Menu"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "GINZA"."Restaurant" ("id");

ALTER TABLE "GINZA"."MenuMeal"
    ADD FOREIGN KEY ("menu_id") REFERENCES "GINZA"."Menu" ("id");

ALTER TABLE "GINZA"."MenuMeal"
    ADD FOREIGN KEY ("meal_id") REFERENCES "GINZA"."Meal" ("id");

ALTER TABLE "GINZA"."OrderEntry"
    ADD FOREIGN KEY ("order_id") REFERENCES "GINZA"."Order" ("id");

ALTER TABLE "GINZA"."OrderEntry"
    ADD FOREIGN KEY ("meal_id") REFERENCES "GINZA"."Meal" ("id");


